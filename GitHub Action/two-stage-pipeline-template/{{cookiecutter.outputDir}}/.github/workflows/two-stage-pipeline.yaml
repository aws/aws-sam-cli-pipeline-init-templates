name: Pipeline

on: [push]

env:
  aws_access_key_id_: ${{ "{{" }} secrets.{{cookiecutter.deployer_aws_access_key_id_variable_name}} {{ "}}" }}
  aws_secret_access_key_: ${{ "{{" }} secrets.{{cookiecutter.deployer_aws_secret_access_key_variable_name}} {{ "}}" }}
  sam_template: {{cookiecutter.sam_template}}
  testing_stack_name: {{cookiecutter.testing_stack_name}}
  testing_deployer_role: {{cookiecutter.testing_deployer_role}}
  testing_cfn_deployment_role: {{cookiecutter.testing_cfn_deployment_role}}
  testing_artifacts_bucket: {{cookiecutter.testing_artifacts_bucket}}
  testing_ecr_repo: {{cookiecutter.testing_ecr_repo}}
  testing_region: {{cookiecutter.testing_region}}
  prod_stack_name: {{cookiecutter.prod_stack_name}}
  prod_deployer_role: {{cookiecutter.prod_deployer_role}}
  prod_cfn_deployment_role: {{cookiecutter.prod_cfn_deployment_role}}
  prod_artifacts_bucket: {{cookiecutter.prod_artifacts_bucket}}
  prod_ecr_repo: {{cookiecutter.prod_ecr_repo}}
  prod_region: {{cookiecutter.prod_region}}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          # uncomment and modify the following step for running the unit-tests
          # Assuming python runtime
          # pip install pytest
          # pip install -r /path/to/requirements.txt
          # python -m pytest /path/to/unit-tests
  
  build-and-deploy-feature:
    if: startsWith(github.ref, 'refs/heads/feature')
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          . .github/workflows/assume-role.sh ${testing_region}\
                                             ${testing_deployer_role}\
                                             feature-deployment
          sam build --template ${sam_template} --use-container
          sam deploy --stack-name features-${GITHUB_REF##*/}-cfn-stack \
            --capabilities CAPABILITY_IAM \
            --region ${testing_region} \
            --s3-bucket ${testing_artifacts_bucket} \
            --image-repository ${testing_ecr_repo} \
            --no-fail-on-empty-changeset \
            --role-arn ${testing_cfn_deployment_role}
  
  build:
    if: github.ref == 'refs/heads/{{cookiecutter.main_git_branch}}'
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build resources
        run: sam build --template ${sam_template} --use-container
      - name: Upload artifacts to testing artifact buckets
        run: |
          . .github/workflows/assume-role.sh ${testing_region} \
                                             ${testing_deployer_role} \
                                             prod-stage-packaging
          sam package \
            --s3-bucket ${testing_artifacts_bucket} \
            --image-repository ${testing_ecr_repo} \
            --region ${testing_region} \
            --output-template-file packaged-testing.yaml
      - name: Upload artifacts to production artifact buckets
        run: |
          . .github/workflows/assume-role.sh ${prod_region} \
                                             ${prod_deployer_role} \
                                             prod-stage-packaging
          sam package \
            --s3-bucket ${prod_artifacts_bucket} \
            --region ${prod_region} \
            --image-repository ${prod_ecr_repo} \
            --output-template-file packaged-prod.yaml

      - uses: actions/upload-artifact@v2
        with:
          name: packaged-testing.yaml
          path: packaged-testing.yaml
          retention-days: 365
      - uses: actions/upload-artifact@v2
        with:
          name: packaged-prod.yaml
          path: packaged-prod.yaml
          retention-days: 365
    
  deploy-testing:
    if: github.ref == 'refs/heads/{{cookiecutter.main_git_branch}}'
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: packaged-testing.yaml
      - name: Deploy to testing account
        run: |
          . .github/workflows/assume-role.sh ${testing_region} \
                                             ${testing_deployer_role} \
                                             testing-deployment
          sam deploy --stack-name ${testing_stack_name} \
            --template packaged-testing.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${testing_region} \
            --s3-bucket ${testing_artifacts_bucket} \
            --image-repository ${testing_ecr_repo} \
            --no-fail-on-empty-changeset \
            --role-arn ${testing_cfn_deployment_role}
  
  integration-test:
    if: github.ref == 'refs/heads/{{cookiecutter.main_git_branch}}'
    needs: [deploy-testing]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          # trigger the integration tests here
  
  deploy-prod:
    if: github.ref == 'refs/heads/{{cookiecutter.main_git_branch}}'
    needs: [integration-test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: packaged-prod.yaml
      - name: Deploy to production account
        run: |
          . .github/workflows/assume-role.sh ${prod_region} \
                                             ${prod_deployer_role} \
                                             prod-deployment
          sam deploy --stack-name ${prod_stack_name} \
            --template packaged-prod.yaml \
            --capabilities CAPABILITY_IAM \
            --region ${prod_region} \
            --s3-bucket ${prod_artifacts_bucket} \
            --image-repository ${prod_ecr_repo} \
            --no-fail-on-empty-changeset \
            --role-arn ${prod_cfn_deployment_role}
